datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Property {
  address       String?
  availableFrom DateTime?
  bookings      Booking[]
  city          String?
  createdAt     DateTime               @default(now())
  description   String?
  id            String                 @id @default(auto()) @map("_id") @db.ObjectId
  price         Float?
  state         String?
  title         String?
  transactions  Transaction[]
  typeField     EnumPropertyTypeField?
  updatedAt     DateTime               @updatedAt
  zipcode       String?
}

model Transaction {
  amount     Float?
  createdAt  DateTime               @default(now())
  date       DateTime?
  id         String                 @id @default(auto()) @map("_id") @db.ObjectId
  property   Property?              @relation(fields: [propertyId], references: [id])
  propertyId String?                @db.ObjectId
  status     EnumTransactionStatus?
  updatedAt  DateTime               @updatedAt
  user       User?                  @relation(fields: [userId], references: [id])
  userId     String?                @db.ObjectId
}

model Booking {
  createdAt  DateTime           @default(now())
  endDate    DateTime?
  id         String             @id @default(auto()) @map("_id") @db.ObjectId
  property   Property?          @relation(fields: [propertyId], references: [id])
  propertyId String?            @db.ObjectId
  startDate  DateTime?
  status     EnumBookingStatus?
  updatedAt  DateTime           @updatedAt
  user       User?              @relation(fields: [userId], references: [id])
  userId     String?            @db.ObjectId
}

model User {
  bookings     Booking[]
  createdAt    DateTime      @default(now())
  email        String?       @unique
  firstName    String?
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  lastName     String?
  password     String
  roles        Json
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
  username     String        @unique
}

model Payment {
  amount        Float?
  createdAt     DateTime           @default(now())
  currency      String?
  id            String             @id @default(auto()) @map("_id") @db.ObjectId
  method        EnumPaymentMethod?
  status        EnumPaymentStatus?
  transactionId String?
  updatedAt     DateTime           @updatedAt
}

enum EnumPropertyTypeField {
  Option1
}

enum EnumTransactionStatus {
  Option1
}

enum EnumBookingStatus {
  Option1
}

enum EnumPaymentMethod {
  Option1
}

enum EnumPaymentStatus {
  Option1
}
